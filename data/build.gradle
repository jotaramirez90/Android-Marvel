buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'me.tatarka:gradle-retrolambda:3.2.3'
  }
}

apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.fernandocejas.frodo'

android {
  defaultPublishConfig "debug"

  def globalConfiguration = rootProject.extensions.getByName("ext")

  compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
  buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

  defaultConfig {
    minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
    targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
    versionCode globalConfiguration.getAt("androidVersionCode")
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  lintOptions {
    quiet true
    abortOnError false
    ignoreWarnings true
    disable 'InvalidPackage'
    disable 'OldTargetApi'
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
  }
}

dependencies {
  def dataDependencies = rootProject.ext.dataDependencies
  def testDependencies = rootProject.ext.dataTestDependencies

  compile project(':domain')

  //RxJava
  compile dataDependencies.rxJava
  compile dataDependencies.rxAndroid

  //Retrofit
  compile dataDependencies.retrofit
  compile dataDependencies.retrofitConverterGson
  compile dataDependencies.retrofitAdapterRxJava

  //Dagger2
  apt dataDependencies.daggerCompiler
  compile dataDependencies.dagger

  provided dataDependencies.javaxAnnotation
  compile dataDependencies.androidAnnotations

  //Testing
  testCompile testDependencies.jUnit
  testCompile testDependencies.assertj
  testCompile testDependencies.mockito
  testCompile testDependencies.robolectric
}